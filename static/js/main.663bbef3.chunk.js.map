{"version":3,"sources":["redux/slices/wallOneSlice.ts","redux/slices/wallTwoSlice.ts","redux/slices/wallThreeSlice.ts","redux/slices/wallFourSlice.ts","redux/slices/resultSlice.ts","redux/reducers/rootReducer.ts","redux/store/store.ts","components/Footer/index.tsx","components/AtomicDesign/atoms/Button/index.tsx","components/Section/intex.tsx","pages/Main/index.tsx","redux/hooks.ts","pages/ResultPage/index.tsx","utils/functions/functions.ts","components/AtomicDesign/atoms/Input/index.tsx","components/AtomicDesign/molecules/WallFormFour/index.tsx","pages/WallFour/index.tsx","components/AtomicDesign/molecules/WallFormOne/index.tsx","pages/WallOne/index.tsx","components/AtomicDesign/molecules/WallFormThree/index.tsx","pages/WallThree/index.tsx","components/AtomicDesign/molecules/WallFormTwo/index.tsx","pages/WallTwo/index.tsx","routes/index.tsx","index.tsx"],"names":["slice","createSlice","name","initialState","height","width","doors","windows","reducers","setWallOneHeight","state","_ref","payload","Object","objectSpread","setWallOneWidth","_ref2","setWallOneDoors","_ref3","setWallOneWindows","_ref4","actions","setWallTwoHeight","setWallTwoWidth","setWallTwoDoors","setWallTwoWindows","setWallThreeHeight","setWallThreeWidth","setWallThreeDoors","setWallThreeWindows","setWallFourHeight","setWallFourWidth","setWallFourDoors","setWallFourWindows","doorsHeigth","doorsWidth","windowsHeight","windowsWidth","canOfPaintXLarge","canOfPaintLarge","canOfPaintMedium","canOfPaintSmall","coveragePerLitter","totalWallsArea","totalLittersXLarge","totalLittersLarge","totalLittersMedium","totalLittersSmall","color","setTotalWallsArea","setTotalLitters","totalLitters","setColor","rootReducer","combineReducers","wallOneSlice","wallTwoSlice","wallThreeSlice","wallFourSlice","resultSlice","store","configureStore","reducer","useDispatch","Footer","react_default","a","createElement","className","Button","title","onClick","props","objectWithoutProperties","assign","Section","_useState","useState","_useState2","slicedToArray","colors","setColors","console","log","navigate","useNavigate","dispatch","useEffect","type","id","onChange","e","value","target","Button_Button","MainPage","intex_Section","useAppSelector","useSelector","ResultPage","restOfDivisionXLarge","quantityXLargeCanOfPaint","_useAppSelector","restOfDivisionLarge","restOfDivisionMedium","quantityLargeCanOfPaint","quantityMediumCanOfPaint","quantitySmallCanOfPaint","Math","floor","ceil","style","startsWith","backgroundColor","toFixed","concat","replaceClassName","toLowerCase","replace","Input","placeholder","label","handleChange","htmlFor","min","WallFormFour","values","setValues","defineProperty","onSubmit","preventDefault","Input_Input","step","WallFour","_useAppSelector2","wallOneHeigth","wallOneWidth","wallOneDoors","wallOneWindows","_useAppSelector3","wallTwoHeigth","wallTwoWidth","wallTwoDoors","wallTwoWindows","_useAppSelector4","wallThreeHeigth","wallThreeWidth","wallThreeDoors","wallThreeWindows","_useAppSelector5","wallFourHeigth","wallFourWidth","wallFourDoors","wallFourWindows","WallFormFour_WallFormFour","WallFormOne","WallOne","WallFormOne_WallFormOne","WallFormThree","WallThree","WallFormThree_WallFormThree","WallFormTwo","WallTwo","WallFormTwo_WallFormTwo","RoutesBuilder","react_router","path","element","Main","WallOne_WallOne","WallTwo_WallTwo","WallThree_WallThree","WallFour_WallFour","ResultPage_ResultPage","CreateRoutes","react_router_dom","basename","process","routes_RoutesBuilder","Footer_Footer","ReactDOM","createRoot","document","getElementById","render","StrictMode","es","routes_CreateRoutes"],"mappings":"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","file":"static/js/main.663bbef3.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ntype InitialState = {\n  height: number;\n  width: number;\n  doors: number;\n  windows: number;\n};\n\nconst initialState: InitialState = {\n  height: 0,\n  width: 0,\n  doors: 0,\n  windows: 0,\n};\n\nexport const slice = createSlice({\n  name: 'wallOne',\n  initialState,\n  reducers: {\n    setWallOneHeight(state: any, { payload }: PayloadAction<number>) {\n      return { ...state, height: payload };\n    },\n    setWallOneWidth(state: any, { payload }: PayloadAction<number>) {\n      return { ...state, width: payload };\n    },\n    setWallOneDoors(state: any, { payload }: PayloadAction<number>) {\n      return { ...state, doors: payload };\n    },\n    setWallOneWindows(state: any, { payload }: PayloadAction<number>) {\n      return { ...state, windows: payload };\n    },\n  },\n});\n\nexport const {\n  setWallOneHeight,\n  setWallOneWidth,\n  setWallOneDoors,\n  setWallOneWindows,\n} = slice.actions;\n\nexport const selectHeight = (state: { height: unknown }) => state.height;\nexport const selectWidth = (state: { width: unknown }) => state.width;\nexport const selectDoors = (state: { doors: unknown }) => state.doors;\nexport const selectWindows = (state: { windows: unknown }) => state.windows;\n\nexport default slice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ntype InitialState = {\n  height: number;\n  width: number;\n  doors: number;\n  windows: number;\n};\n\nconst initialState: InitialState = {\n  height: 0,\n  width: 0,\n  doors: 0,\n  windows: 0,\n};\n\nexport const slice = createSlice({\n  name: 'wallTwo',\n  initialState,\n  reducers: {\n    setWallTwoHeight(state: any, { payload }: PayloadAction<number>) {\n      return { ...state, height: payload };\n    },\n    setWallTwoWidth(state: any, { payload }: PayloadAction<number>) {\n      return { ...state, width: payload };\n    },\n    setWallTwoDoors(state: any, { payload }: PayloadAction<number>) {\n      return { ...state, doors: payload };\n    },\n    setWallTwoWindows(state: any, { payload }: PayloadAction<number>) {\n      return { ...state, windows: payload };\n    },\n  },\n});\n\nexport const {\n  setWallTwoHeight,\n  setWallTwoWidth,\n  setWallTwoDoors,\n  setWallTwoWindows,\n} = slice.actions;\n\nexport const selectHeight = (state: { height: unknown }) => state.height;\nexport const selectWidth = (state: { width: unknown }) => state.width;\nexport const selectDoors = (state: { doors: unknown }) => state.doors;\nexport const selectWindows = (state: { windows: unknown }) => state.windows;\n\nexport default slice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ntype InitialState = {\n  height: number;\n  width: number;\n  doors: number;\n  windows: number;\n};\n\nconst initialState: InitialState = {\n  height: 0,\n  width: 0,\n  doors: 0,\n  windows: 0,\n};\n\nexport const slice = createSlice({\n  name: 'wallThree',\n  initialState,\n  reducers: {\n    setWallThreeHeight(state: any, { payload }: PayloadAction<number>) {\n      return { ...state, height: payload };\n    },\n    setWallThreeWidth(state: any, { payload }: PayloadAction<number>) {\n      return { ...state, width: payload };\n    },\n    setWallThreeDoors(state: any, { payload }: PayloadAction<number>) {\n      return { ...state, doors: payload };\n    },\n    setWallThreeWindows(state: any, { payload }: PayloadAction<number>) {\n      return { ...state, windows: payload };\n    },\n  },\n});\n\nexport const {\n  setWallThreeHeight,\n  setWallThreeWidth,\n  setWallThreeDoors,\n  setWallThreeWindows,\n} = slice.actions;\n\nexport const selectHeight = (state: { height: unknown }) => state.height;\nexport const selectWidth = (state: { width: unknown }) => state.width;\nexport const selectDoors = (state: { doors: unknown }) => state.doors;\nexport const selectWindows = (state: { windows: unknown }) => state.windows;\n\nexport default slice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ntype InitialState = {\n  height: number;\n  width: number;\n  doors: number;\n  windows: number;\n};\n\nconst initialState: InitialState = {\n  height: 0,\n  width: 0,\n  doors: 0,\n  windows: 0,\n};\n\nexport const slice = createSlice({\n  name: 'wallFour',\n  initialState,\n  reducers: {\n    setWallFourHeight(state: any, { payload }: PayloadAction<number>) {\n      return { ...state, height: payload };\n    },\n    setWallFourWidth(state: any, { payload }: PayloadAction<number>) {\n      return { ...state, width: payload };\n    },\n    setWallFourDoors(state: any, { payload }: PayloadAction<number>) {\n      return { ...state, doors: payload };\n    },\n    setWallFourWindows(state: any, { payload }: PayloadAction<number>) {\n      return { ...state, windows: payload };\n    },\n  },\n});\n\nexport const {\n  setWallFourHeight,\n  setWallFourWidth,\n  setWallFourDoors,\n  setWallFourWindows,\n} = slice.actions;\n\nexport const selectHeight = (state: { height: unknown }) => state.height;\nexport const selectWidth = (state: { width: unknown }) => state.width;\nexport const selectDoors = (state: { doors: unknown }) => state.doors;\nexport const selectWindows = (state: { windows: unknown }) => state.windows;\n\nexport default slice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ntype InitialState = {\n  doorsHeigth: number;\n  doorsWidth: number;\n  windowsHeight: number;\n  windowsWidth: number;\n  canOfPaintXLarge: number;\n  canOfPaintLarge: number;\n  canOfPaintMedium: number;\n  canOfPaintSmall: number;\n  coveragePerLitter: number;\n  totalWallsArea: number;\n  totalLittersXLarge: number;\n  totalLittersLarge: number;\n  totalLittersMedium: number;\n  totalLittersSmall: number;\n  color: string;\n};\n\nconst initialState: InitialState = {\n  doorsHeigth: 1.9,\n  doorsWidth: 0.8,\n  windowsHeight: 2,\n  windowsWidth: 1.2,\n  canOfPaintXLarge: 18,\n  canOfPaintLarge: 3.6,\n  canOfPaintMedium: 2.5,\n  canOfPaintSmall: 0.5,\n  coveragePerLitter: 5,\n  totalWallsArea: 0,\n  totalLittersXLarge: 0,\n  totalLittersLarge: 0,\n  totalLittersMedium: 0,\n  totalLittersSmall: 0,\n  color: '',\n};\n\nexport const slice = createSlice({\n  name: 'Result',\n  initialState,\n  reducers: {\n    setTotalWallsArea(state: any, { payload }: PayloadAction<number>) {\n      return { ...state, totalWallsArea: payload };\n    },\n    setTotalLitters(state: any, { payload }: PayloadAction<number>) {\n      return { ...state, totalLitters: payload };\n    },\n    setColor(state: any, { payload }: PayloadAction<string>) {\n      return { ...state, color: payload };\n    },\n  },\n});\n\nexport const { setTotalWallsArea, setTotalLitters, setColor } = slice.actions;\n\nexport const selectDoorsHeight = (state: { doorsHeigth: unknown }) =>\n  state.doorsHeigth;\nexport const selectDoorsWidth = (state: { doorsWidth: unknown }) =>\n  state.doorsWidth;\nexport const selectWindowsHeight = (state: { windowsHeight: unknown }) =>\n  state.windowsHeight;\nexport const selectWindowsWidth = (state: { windowsWidth: unknown }) =>\n  state.windowsWidth;\n\nexport const selectCanOfPaintExLarge = (state: { canOfPaintXLarge: unknown }) =>\n  state.canOfPaintXLarge;\nexport const selectCanOfPaintLarge = (state: { canOfPaintLarge: unknown }) =>\n  state.canOfPaintLarge;\nexport const selectCanOfPaintMedium = (state: { canOfPaintMedium: unknown }) =>\n  state.canOfPaintMedium;\nexport const selectCanOfPaintSmall = (state: { canOfPaintSmall: unknown }) =>\n  state.canOfPaintSmall;\nexport const selectCoveragePerLitter = (state: {\n  coveragePerLitter: unknown;\n}) => state.coveragePerLitter;\n\nexport default slice.reducer;\n","import { combineReducers } from '@reduxjs/toolkit';\nimport wallOneSlice from '../slices/wallOneSlice';\nimport wallTwoSlice from '../slices/wallTwoSlice';\nimport wallThreeSlice from '../slices/wallThreeSlice';\nimport wallFourSlice from '../slices/wallFourSlice';\nimport resultSlice from '../slices/resultSlice';\n\nexport const rootReducer = combineReducers({\n  wallOneSlice,\n  wallTwoSlice,\n  wallThreeSlice,\n  wallFourSlice,\n  resultSlice,\n});\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { useDispatch } from 'react-redux';\nimport { rootReducer } from '../reducers/rootReducer';\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport default store;\n","import React from 'react';\nimport './style.css';\n\nexport const Footer = (): React.ReactElement => {\n  return (\n    <footer className='footer'>\n      <span>Criado por Luan da Silva Ramalho</span>\n    </footer>\n  );\n};\n","import React from 'react';\n\nimport './style.css';\n\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  title: string;\n  onClick: (event: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nexport const Button: React.FC<ButtonProps> = ({ title, onClick, ...props }) => {\n  return (\n    <button onClick={onClick} {...props}>\n      {title}\n    </button>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Button } from '../AtomicDesign/atoms/Button';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport './style.css';\nimport { setColor } from '../../redux/slices/resultSlice';\n\nexport const Section = () => {\n  const [colors, setColors] = useState('');\n  console.log('🚀 ~ file: intex.tsx ~ line 10 ~ Section ~ colors', colors);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(setColor(colors));\n  }, [dispatch, colors]);\n\n  const handleChange = (e: any) => {\n    const { value } = e.target;\n    console.log('🚀 ~ file: intex.tsx ~ line 19 ~ handleChange ~ value', value);\n    setColors(value);\n  };\n\n  const handleClick = () => {\n    navigate('/wallone');\n  };\n\n  return (\n    <div className='container'>\n      <h1>Boas vindas à Calculadora de tintas</h1>\n      <p>\n        Aqui você saberá quantas latas de tinta precisará para pintar sua casa\n      </p>\n      <div className='chooseColor'>\n        <h3>Escolha sua cor:</h3>\n        <input type='color' name='color' id='color' onChange={handleChange} />\n      </div>\n\n      <Button title='Começar' className='start-btn' onClick={handleClick} />\n    </div>\n  );\n};\n","import React from 'react';\nimport { Section } from '../../components/Section/intex';\n\nfunction MainPage() {\n  return (\n    <div className='App'>\n      <Section />\n    </div>\n  );\n}\n\nexport default MainPage;\n","import { useSelector, TypedUseSelectorHook, useDispatch } from 'react-redux';\nimport { RootState } from './reducers/rootReducer';\nimport { AppDispatch } from './store/store';\n\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\nexport const useAppDispatch = () => useDispatch<AppDispatch>;\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAppSelector } from '../../redux/hooks';\nimport { Button } from '../../components/AtomicDesign/atoms/Button';\nimport './style.css';\n\nexport const ResultPage = () => {\n  const {\n    canOfPaintXLarge,\n    canOfPaintLarge,\n    canOfPaintMedium,\n    canOfPaintSmall,\n    totalWallsArea,\n    coveragePerLitter,\n    color,\n  } = useAppSelector(state => state.resultSlice);\n\n  const totalLitters = totalWallsArea / coveragePerLitter;\n\n  let restOfDivisionXLarge = 0;\n  let restOfDivisionLarge = 0;\n  let restOfDivisionMedium = 0;\n\n  let quantityXLargeCanOfPaint = 0;\n  let quantityLargeCanOfPaint = 0;\n  let quantityMediumCanOfPaint = 0;\n  let quantitySmallCanOfPaint = 0;\n\n  // XL\n  restOfDivisionXLarge = totalLitters % canOfPaintXLarge;\n  quantityXLargeCanOfPaint = Math.floor(totalLitters / canOfPaintXLarge);\n\n  // L\n  if (quantityXLargeCanOfPaint < 1) {\n    quantityLargeCanOfPaint = Math.floor(totalLitters / canOfPaintLarge);\n    restOfDivisionLarge = totalLitters % canOfPaintLarge;\n  }\n  if (restOfDivisionXLarge >= canOfPaintLarge) {\n    quantityLargeCanOfPaint = Math.floor(\n      restOfDivisionXLarge / canOfPaintLarge,\n    );\n    restOfDivisionLarge = restOfDivisionXLarge % canOfPaintLarge;\n  }\n  console.log(\n    '🚀 ~ file: index.tsx ~ line 42 ~ ResultPage ~ restOfDivisionLarge',\n    restOfDivisionLarge,\n  );\n\n  // M\n  if (quantityLargeCanOfPaint < 1 && quantityXLargeCanOfPaint < 1) {\n    quantityMediumCanOfPaint = Math.floor(totalLitters / canOfPaintMedium);\n    restOfDivisionMedium = totalLitters % canOfPaintMedium;\n  }\n  if (\n    restOfDivisionXLarge >= canOfPaintMedium &&\n    restOfDivisionXLarge < canOfPaintLarge\n  ) {\n    quantityMediumCanOfPaint = Math.floor(\n      restOfDivisionXLarge / canOfPaintMedium,\n    );\n    restOfDivisionMedium = restOfDivisionXLarge % canOfPaintMedium;\n  }\n  if (restOfDivisionLarge >= canOfPaintMedium) {\n    quantityMediumCanOfPaint = Math.floor(\n      restOfDivisionLarge / canOfPaintMedium,\n    );\n    restOfDivisionMedium = restOfDivisionLarge % canOfPaintMedium;\n  }\n\n  // P\n  if (\n    quantityXLargeCanOfPaint < 1 &&\n    quantityLargeCanOfPaint < 1 &&\n    quantityMediumCanOfPaint < 1\n  ) {\n    quantitySmallCanOfPaint = Math.ceil(totalLitters / canOfPaintSmall);\n  }\n  if (\n    restOfDivisionXLarge < canOfPaintLarge &&\n    restOfDivisionXLarge < canOfPaintMedium\n  ) {\n    quantitySmallCanOfPaint = Math.ceil(restOfDivisionXLarge / canOfPaintSmall);\n  }\n  if (restOfDivisionLarge < canOfPaintMedium) {\n    quantitySmallCanOfPaint = Math.ceil(restOfDivisionLarge / canOfPaintSmall);\n  } else {\n    quantitySmallCanOfPaint = Math.ceil(restOfDivisionMedium / canOfPaintSmall);\n  }\n\n  const navigate = useNavigate();\n\n  const handleClick = () => {\n    navigate('/');\n  };\n\n  return (\n    <div\n      className='container'\n      style={\n        color.startsWith('#f') || color.startsWith('#e')\n          ? { backgroundColor: '#888' }\n          : { backgroundColor: '#fff' }\n      }\n    >\n      <h1>Area a ser pintada: {totalWallsArea.toFixed(2)} m²</h1>\n      <br />\n      <h2>\n        Você precisará de:{' '}\n        <span className='litters'>\n          {totalLitters.toFixed(2)} litros de tinta\n        </span>\n      </h2>\n      <br />\n      {quantityXLargeCanOfPaint > 0 ? (\n        <h1\n          className='canOfPaints'\n          style={{ color: color }}\n        >{`${quantityXLargeCanOfPaint} latas de 18 litros`}</h1>\n      ) : (\n        ''\n      )}\n      {quantityLargeCanOfPaint > 0 ? (\n        <h1\n          className='canOfPaints'\n          style={{ color: color }}\n        >{`${quantityLargeCanOfPaint} latas de 3,6 litros`}</h1>\n      ) : (\n        ''\n      )}\n      {quantityMediumCanOfPaint > 0 ? (\n        <h1\n          className='canOfPaints'\n          style={{ color: color }}\n        >{`${quantityMediumCanOfPaint} latas de 2,5 litros`}</h1>\n      ) : (\n        ''\n      )}\n      {quantitySmallCanOfPaint > 0 ? (\n        <h1\n          className='canOfPaints'\n          style={{ color: color }}\n        >{`${quantitySmallCanOfPaint} latas de 0,5 litro`}</h1>\n      ) : (\n        ''\n      )}\n\n      <Button\n        title={'Calcular novamente'}\n        className='calc-again-btn'\n        onClick={handleClick}\n      />\n    </div>\n  );\n};\n","export const replaceClassName = (title: string) => {\n  return title.toLowerCase().replace(' ', '-');\n};\n","import React from 'react';\nimport './style.css';\n\ninterface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  type: string;\n  placeholder?: string;\n  id: string;\n  label: string;\n  value: number;\n  name: string;\n  handleChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nexport const Input: React.FC<InputProps> = ({\n  type,\n  placeholder,\n  id,\n  label,\n  value,\n  name,\n  handleChange,\n  ...props\n}) => {\n  return (\n    <div className='input-container'>\n      <label htmlFor={id}>{label}</label>\n      <input\n        {...props}\n        id={id}\n        type={type}\n        min='0'\n        placeholder={placeholder}\n        value={value}\n        name={name}\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n","import React, { FormEvent, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  setWallFourDoors,\n  setWallFourHeight,\n  setWallFourWidth,\n  setWallFourWindows,\n} from '../../../../redux/slices/wallFourSlice';\nimport { replaceClassName } from '../../../../utils/functions/functions';\nimport { Input } from '../../atoms/Input';\nimport './style.css';\n\ninterface FormProps extends React.FormHTMLAttributes<HTMLFormElement> {\n  title: string;\n}\n\nexport const WallFormFour: React.FC<FormProps> = ({ title }) => {\n  const [values, setValues] = useState({\n    height: 0,\n    width: 0,\n    doors: 0,\n    windows: 0,\n  });\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(setWallFourHeight(values.height));\n    dispatch(setWallFourWidth(values.width));\n    dispatch(setWallFourDoors(values.doors));\n    dispatch(setWallFourWindows(values.windows));\n  }, [values, dispatch]);\n\n  const handleSubmit = (e: FormEvent) => {\n    e.preventDefault();\n  };\n\n  const handleChange = (e: any) => {\n    const { value } = e.target;\n    setValues({\n      ...values,\n      [e.target.name]: value,\n    });\n  };\n\n  return (\n    <section className={`wall-form ${replaceClassName(title)}`}>\n      <form onSubmit={handleSubmit}>\n        <h1>{title}</h1>\n        <Input\n          id='wallOne'\n          type='number'\n          label='Quantidade de portas' // se for maior que 0 calcular valor mínimo da parede: alturaMinima = porta + 30\n          placeholder='Digite a quantidade de portas'\n          value={values.doors}\n          name='doors'\n          handleChange={handleChange}\n        />\n        <Input\n          id='wallOne'\n          type='number'\n          label='Quantidade de janelas'\n          placeholder='Digite a quantidade de janelas'\n          name='windows'\n          value={values.windows}\n          handleChange={handleChange}\n        />\n        <Input\n          id='wallOne'\n          type='number'\n          label='Altura (m)'\n          placeholder='Digite a altura da parede'\n          value={values.height}\n          name='height'\n          step='.1'\n          handleChange={handleChange}\n        />\n        <Input\n          id='wallOne'\n          type='number'\n          label='Largura (m)'\n          placeholder='Digite a largura da parede'\n          value={values.width}\n          name='width'\n          step='.1'\n          handleChange={handleChange}\n        />\n      </form>\n    </section>\n  );\n};\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { WallFormFour } from '../../components/AtomicDesign/molecules/WallFormFour';\nimport { Button } from '../../components/AtomicDesign/atoms/Button';\nimport './style.css';\nimport { setTotalWallsArea } from '../../redux/slices/resultSlice';\nimport { useAppSelector } from '../../redux/hooks';\n\nexport const WallFour = () => {\n  const {\n    doorsHeigth,\n    doorsWidth,\n    windowsHeight,\n    windowsWidth,\n    canOfPaintXLarge,\n    canOfPaintLarge,\n    canOfPaintMedium,\n    canOfPaintSmall,\n    totalWallsArea,\n    coveragePerLitter,\n  } = useAppSelector(state => state.resultSlice);\n  const {\n    height: wallOneHeigth,\n    width: wallOneWidth,\n    doors: wallOneDoors,\n    windows: wallOneWindows,\n  } = useAppSelector(state => state.wallOneSlice);\n  const {\n    height: wallTwoHeigth,\n    width: wallTwoWidth,\n    doors: wallTwoDoors,\n    windows: wallTwoWindows,\n  } = useAppSelector(state => state.wallTwoSlice);\n  const {\n    height: wallThreeHeigth,\n    width: wallThreeWidth,\n    doors: wallThreeDoors,\n    windows: wallThreeWindows,\n  } = useAppSelector(state => state.wallThreeSlice);\n  const {\n    height: wallFourHeigth,\n    width: wallFourWidth,\n    doors: wallFourDoors,\n    windows: wallFourWindows,\n  } = useAppSelector(state => state.wallFourSlice);\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const calcTotalArea = (): number => {\n    const areaDoorsOne = doorsHeigth * doorsWidth * wallOneDoors;\n    const areaDoorsTwo = doorsHeigth * doorsWidth * wallTwoDoors;\n    const areaDoorsThree = doorsHeigth * doorsWidth * wallThreeDoors;\n    const areaDoorsFour = doorsHeigth * doorsWidth * wallFourDoors;\n\n    const areaWindowsOne = windowsHeight * windowsWidth * wallOneWindows;\n    const areaWindowsTwo = windowsHeight * windowsWidth * wallTwoWindows;\n    const areaWindowsThree = windowsHeight * windowsWidth * wallThreeWindows;\n    const areaWindowsFour = windowsHeight * windowsWidth * wallFourWindows;\n\n    const totalAreaDoorsWindows =\n      areaDoorsOne +\n      areaDoorsTwo +\n      areaDoorsThree +\n      areaDoorsFour +\n      areaWindowsOne +\n      areaWindowsTwo +\n      areaWindowsThree +\n      areaWindowsFour;\n\n    const wallOneArea = wallOneHeigth * wallOneWidth;\n    const wallTwoArea = wallTwoHeigth * wallTwoWidth;\n    const wallThreeArea = wallThreeHeigth * wallThreeWidth;\n    const wallFourArea = wallFourHeigth * wallFourWidth;\n\n    const totalAreaToPaint =\n      wallOneArea +\n      wallTwoArea +\n      wallThreeArea +\n      wallFourArea -\n      totalAreaDoorsWindows;\n\n    return totalAreaToPaint;\n  };\n\n  const handleClick = () => {\n    dispatch(setTotalWallsArea(calcTotalArea()));\n    navigate('/result');\n  };\n\n  return (\n    <div className='container'>\n      <WallFormFour title='Parede 4' />\n      <Button title='Calcular' className='calc-btn' onClick={handleClick} />\n    </div>\n  );\n};\n","import React, { FormEvent, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  setWallOneDoors,\n  setWallOneHeight,\n  setWallOneWidth,\n  setWallOneWindows,\n} from '../../../../redux/slices/wallOneSlice';\nimport { replaceClassName } from '../../../../utils/functions/functions';\nimport { Input } from '../../atoms/Input';\nimport './style.css';\n// import { useAppSelector } from '../../../../redux/hooks';\n\ninterface FormProps extends React.FormHTMLAttributes<HTMLFormElement> {\n  title: string;\n}\n\nexport const WallFormOne: React.FC<FormProps> = ({ title }) => {\n  const [values, setValues] = useState({\n    height: 0,\n    width: 0,\n    doors: 0,\n    windows: 0,\n  });\n  // const [minValue, setMinValue] = useState(0);\n  const dispatch = useDispatch();\n  // const { doorsHeigth } = useAppSelector(state => state.resultSlice);\n\n  useEffect(() => {\n    dispatch(setWallOneHeight(values.height));\n    dispatch(setWallOneWidth(values.width));\n    dispatch(setWallOneDoors(values.doors));\n    dispatch(setWallOneWindows(values.windows));\n  }, [values, dispatch]);\n\n  const handleSubmit = (e: FormEvent) => {\n    e.preventDefault();\n  };\n\n  // const handleMinValueInputWallHeight = () => {\n  //   const THIRTY_CENTIMETERS = 0.3;\n  //   const min = doorsHeigth + THIRTY_CENTIMETERS;\n  //   if (values.doors > 0) {\n  //     console.log(values.doors);\n\n  //     setMinValue(min);\n  //     // setValues({\n  //     //   ...values,\n  //     //   height: min,\n  //     // });\n  //   }\n  // };\n\n  // useEffect(() => {\n  //   const THIRTY_CENTIMETERS = 0.3;\n  //   const min = doorsHeigth + THIRTY_CENTIMETERS;\n  //   if (values.doors > 0) {\n  //     console.log(values.doors);\n\n  //     setMinValue(min);\n  //   }\n  // }, [doorsHeigth, values]);\n\n  const handleChange = (e: any) => {\n    const { value } = e.target;\n    setValues({\n      ...values,\n      [e.target.name]: value,\n    });\n  };\n\n  return (\n    <section className={`wall-form ${replaceClassName(title)}`}>\n      <form onSubmit={handleSubmit}>\n        <h1>{title}</h1>\n        <Input\n          id='wallOne'\n          type='number'\n          label='Quantidade de portas' // se for maior que 0 calcular valor mínimo da parede: alturaMinima = porta + 30\n          placeholder='Digite a quantidade de portas'\n          value={values.doors}\n          name='doors'\n          handleChange={handleChange}\n        />\n        <Input\n          id='wallOne'\n          type='number'\n          label='Quantidade de janelas'\n          placeholder='Digite a quantidade de janelas'\n          name='windows'\n          value={values.windows}\n          handleChange={handleChange}\n        />\n        <Input\n          id='wallOne'\n          type='number'\n          label='Altura (m)'\n          placeholder='Digite a altura da parede'\n          value={values.height}\n          name='height'\n          // min={minValue}\n          step='.1'\n          handleChange={handleChange}\n        />\n        <Input\n          id='wallOne'\n          type='number'\n          label='Largura (m)'\n          placeholder='Digite a largura da parede'\n          value={values.width}\n          name='width'\n          step='.1'\n          handleChange={handleChange}\n        />\n      </form>\n    </section>\n  );\n};\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { WallFormOne } from '../../components/AtomicDesign/molecules/WallFormOne';\nimport { Button } from '../../components/AtomicDesign/atoms/Button';\nimport './style.css';\n\nexport const WallOne = () => {\n  const navigate = useNavigate();\n\n  const handleClick = () => {\n    navigate('/walltwo');\n  };\n\n  return (\n    <div className='container'>\n      <WallFormOne title='Parede 1' />\n      <Button\n        title='Continuar'\n        className='continue-btn'\n        onClick={handleClick}\n      />\n    </div>\n  );\n};\n","import React, { FormEvent, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  setWallThreeDoors,\n  setWallThreeHeight,\n  setWallThreeWidth,\n  setWallThreeWindows,\n} from '../../../../redux/slices/wallThreeSlice';\nimport { replaceClassName } from '../../../../utils/functions/functions';\nimport { Input } from '../../atoms/Input';\nimport './style.css';\n\ninterface FormProps extends React.FormHTMLAttributes<HTMLFormElement> {\n  title: string;\n}\n\nexport const WallFormThree: React.FC<FormProps> = ({ title }) => {\n  const [values, setValues] = useState({\n    height: 0,\n    width: 0,\n    doors: 0,\n    windows: 0,\n  });\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(setWallThreeHeight(values.height));\n    dispatch(setWallThreeWidth(values.width));\n    dispatch(setWallThreeDoors(values.doors));\n    dispatch(setWallThreeWindows(values.windows));\n  }, [values, dispatch]);\n\n  const handleSubmit = (e: FormEvent) => {\n    e.preventDefault();\n  };\n\n  const handleChange = (e: any) => {\n    const { value } = e.target;\n    setValues({\n      ...values,\n      [e.target.name]: value,\n    });\n  };\n\n  return (\n    <section className={`wall-form ${replaceClassName(title)}`}>\n      <form onSubmit={handleSubmit}>\n        <h1>{title}</h1>\n        <Input\n          id='wallOne'\n          type='number'\n          label='Quantidade de portas' // se for maior que 0 calcular valor mínimo da parede: alturaMinima = porta + 30\n          placeholder='Digite a quantidade de portas'\n          value={values.doors}\n          name='doors'\n          handleChange={handleChange}\n        />\n        <Input\n          id='wallOne'\n          type='number'\n          label='Quantidade de janelas'\n          placeholder='Digite a quantidade de janelas'\n          name='windows'\n          value={values.windows}\n          handleChange={handleChange}\n        />\n        <Input\n          id='wallOne'\n          type='number'\n          label='Altura (m)'\n          placeholder='Digite a altura da parede'\n          value={values.height}\n          name='height'\n          step='.1'\n          handleChange={handleChange}\n        />\n        <Input\n          id='wallOne'\n          type='number'\n          label='Largura (m)'\n          placeholder='Digite a largura da parede'\n          value={values.width}\n          name='width'\n          step='.1'\n          handleChange={handleChange}\n        />\n      </form>\n    </section>\n  );\n};\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { WallFormThree } from '../../components/AtomicDesign/molecules/WallFormThree';\nimport { Button } from '../../components/AtomicDesign/atoms/Button';\nimport './style.css';\n\nexport const WallThree = () => {\n  const navigate = useNavigate();\n\n  const handleClick = () => {\n    navigate('/wallfour');\n  };\n\n  return (\n    <div className='container'>\n      <WallFormThree title='Parede 3' />\n      <Button\n        title='Continuar'\n        className='continue-btn'\n        onClick={handleClick}\n      />\n    </div>\n  );\n};\n","import React, { FormEvent, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  setWallTwoDoors,\n  setWallTwoHeight,\n  setWallTwoWidth,\n  setWallTwoWindows,\n} from '../../../../redux/slices/wallTwoSlice';\nimport { replaceClassName } from '../../../../utils/functions/functions';\nimport { Input } from '../../atoms/Input';\nimport './style.css';\n\ninterface FormProps extends React.FormHTMLAttributes<HTMLFormElement> {\n  title: string;\n}\n\nexport const WallFormTwo: React.FC<FormProps> = ({ title }) => {\n  const [values, setValues] = useState({\n    height: 0,\n    width: 0,\n    doors: 0,\n    windows: 0,\n  });\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(setWallTwoHeight(values.height));\n    dispatch(setWallTwoWidth(values.width));\n    dispatch(setWallTwoDoors(values.doors));\n    dispatch(setWallTwoWindows(values.windows));\n  }, [values, dispatch]);\n\n  const handleSubmit = (e: FormEvent) => {\n    e.preventDefault();\n  };\n\n  const handleChange = (e: any) => {\n    const { value } = e.target;\n    setValues({\n      ...values,\n      [e.target.name]: value,\n    });\n  };\n\n  return (\n    <section className={`wall-form ${replaceClassName(title)}`}>\n      <form onSubmit={handleSubmit}>\n        <h1>{title}</h1>\n        <Input\n          id='wallOne'\n          type='number'\n          label='Quantidade de portas' // se for maior que 0 calcular valor mínimo da parede: alturaMinima = porta + 30\n          placeholder='Digite a quantidade de portas'\n          value={values.doors}\n          name='doors'\n          handleChange={handleChange}\n        />\n        <Input\n          id='wallOne'\n          type='number'\n          label='Quantidade de janelas'\n          placeholder='Digite a quantidade de janelas'\n          name='windows'\n          value={values.windows}\n          handleChange={handleChange}\n        />\n        <Input\n          id='wallOne'\n          type='number'\n          label='Altura (m)'\n          placeholder='Digite a altura da parede'\n          value={values.height}\n          name='height'\n          step='.1'\n          handleChange={handleChange}\n        />\n        <Input\n          id='wallOne'\n          type='number'\n          label='Largura (m)'\n          placeholder='Digite a largura da parede'\n          value={values.width}\n          name='width'\n          step='.1'\n          handleChange={handleChange}\n        />\n      </form>\n    </section>\n  );\n};\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { WallFormTwo } from '../../components/AtomicDesign/molecules/WallFormTwo';\nimport { Button } from '../../components/AtomicDesign/atoms/Button';\nimport './style.css';\n\nexport const WallTwo = () => {\n  const navigate = useNavigate();\n\n  const handleClick = () => {\n    navigate('/wallthree');\n  };\n\n  return (\n    <div className='container'>\n      <WallFormTwo title='Parede 2' />\n      <Button\n        title='Continuar'\n        className='continue-btn'\n        onClick={handleClick}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { Footer } from '../components/Footer';\n\nimport MainPage from '../pages/Main';\nimport { ResultPage } from '../pages/ResultPage';\nimport { WallFour } from '../pages/WallFour';\nimport { WallOne } from '../pages/WallOne';\nimport { WallThree } from '../pages/WallThree';\nimport { WallTwo } from '../pages/WallTwo';\n\nexport const RoutesBuilder = () => {\n  return (\n    <Routes>\n      <Route path='/' element={<MainPage />} />\n      <Route path='/wallone' element={<WallOne />} />\n      <Route path='/walltwo' element={<WallTwo />} />\n      <Route path='/wallthree' element={<WallThree />} />\n      <Route path='/wallfour' element={<WallFour />} />\n      <Route path='/result' element={<ResultPage />} />\n    </Routes>\n  );\n};\n\nexport const CreateRoutes = (): JSX.Element => {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <RoutesBuilder />\n      <Footer />\n    </BrowserRouter>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { Provider } from 'react-redux';\nimport store from './redux/store/store';\nimport { CreateRoutes } from './routes';\nimport './styles/globals.css';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement,\n);\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <CreateRoutes />\n    </Provider>\n  </React.StrictMode>,\n);\n"],"sourceRoot":""}